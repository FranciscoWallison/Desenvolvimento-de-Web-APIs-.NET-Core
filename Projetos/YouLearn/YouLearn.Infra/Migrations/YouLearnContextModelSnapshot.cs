// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YouLearn.Infra.Persistence.EF;

namespace YouLearn.Infra.Migrations
{
    [DbContext(typeof(YouLearnContext))]
    partial class YouLearnContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("YouLearn.Domain.Entities.Channel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("IdUser");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("UrlLogo")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("IdUser");

                    b.ToTable("Channel");
                });

            modelBuilder.Entity("YouLearn.Domain.Entities.PlayList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("IdUser");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("IdUser");

                    b.ToTable("PlayList");
                });

            modelBuilder.Entity("YouLearn.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(36);

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("YouLearn.Domain.Entities.Video", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<Guid?>("IdChannel");

                    b.Property<Guid?>("IdPlayList");

                    b.Property<Guid?>("IdUser");

                    b.Property<string>("IdVideoYoutube")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("OrdemNaPlayList");

                    b.Property<int>("OrderPlayList");

                    b.Property<int>("Status");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("IdChannel");

                    b.HasIndex("IdPlayList");

                    b.HasIndex("IdUser");

                    b.ToTable("Video");
                });

            modelBuilder.Entity("YouLearn.Domain.Entities.Channel", b =>
                {
                    b.HasOne("YouLearn.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("IdUser");
                });

            modelBuilder.Entity("YouLearn.Domain.Entities.PlayList", b =>
                {
                    b.HasOne("YouLearn.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("IdUser");
                });

            modelBuilder.Entity("YouLearn.Domain.Entities.User", b =>
                {
                    b.OwnsOne("YouLearn.Domain.ObjectValue.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("UserId");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasColumnName("Email")
                                .HasMaxLength(200);

                            b1.HasKey("UserId");

                            b1.ToTable("User");

                            b1.HasOne("YouLearn.Domain.Entities.User")
                                .WithOne("Email")
                                .HasForeignKey("YouLearn.Domain.ObjectValue.Email", "UserId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("YouLearn.Domain.ObjectValue.Name", "Name", b1 =>
                        {
                            b1.Property<Guid>("UserId");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnName("FirstName")
                                .HasMaxLength(50);

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnName("LastName")
                                .HasMaxLength(50);

                            b1.HasKey("UserId");

                            b1.ToTable("User");

                            b1.HasOne("YouLearn.Domain.Entities.User")
                                .WithOne("Name")
                                .HasForeignKey("YouLearn.Domain.ObjectValue.Name", "UserId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("YouLearn.Domain.Entities.Video", b =>
                {
                    b.HasOne("YouLearn.Domain.Entities.Channel", "Channel")
                        .WithMany()
                        .HasForeignKey("IdChannel");

                    b.HasOne("YouLearn.Domain.Entities.PlayList", "PlayList")
                        .WithMany()
                        .HasForeignKey("IdPlayList");

                    b.HasOne("YouLearn.Domain.Entities.User", "UserSuggested")
                        .WithMany()
                        .HasForeignKey("IdUser");
                });
#pragma warning restore 612, 618
        }
    }
}
